{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"C:/Users/shubh/OneDrive/Desktop/radio with backend/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\n/**\n * Allows child elements to be transitioned in and out.\n *\n * Demos:\n *\n * - [Transitions](https://mui.com/base-ui/react-transitions/#hooks)\n *\n * API:\n *\n * - [useTransitionTrigger API](https://mui.com/base-ui/react-transitions/hooks-api/#use-transition-trigger)\n */\nexport function useTransitionTrigger(requestEnter) {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    exitTransitionFinished = _React$useState2[0],\n    setExitTransitionFinished = _React$useState2[1];\n  var hasPendingExitTransition = React.useRef(false);\n  var registeredTransitions = React.useRef(0);\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    hasTransition = _React$useState4[0],\n    setHasTransition = _React$useState4[1];\n  var previousRequestEnter = React.useRef(requestEnter);\n  React.useEffect(function () {\n    if (!requestEnter &&\n    // checking registeredTransitions.current instead of hasTransition to avoid this effect re-firing whenever hasTransition changes\n    registeredTransitions.current > 0 &&\n    // prevents waiting for a pending transition right after mounting\n    previousRequestEnter.current !== requestEnter) {\n      hasPendingExitTransition.current = true;\n      setExitTransitionFinished(false);\n    }\n    previousRequestEnter.current = requestEnter;\n  }, [requestEnter]);\n  var handleExited = React.useCallback(function () {\n    hasPendingExitTransition.current = false;\n    setExitTransitionFinished(true);\n  }, []);\n  var registerTransition = React.useCallback(function () {\n    registeredTransitions.current += 1;\n    setHasTransition(true);\n    return function () {\n      registeredTransitions.current -= 1;\n      if (registeredTransitions.current === 0) {\n        setHasTransition(false);\n      }\n    };\n  }, []);\n  var hasExited;\n  if (!hasTransition) {\n    // If there are no transitions registered, the `exited` state is opposite of `requestEnter` immediately.\n    hasExited = !requestEnter;\n  } else if (requestEnter) {\n    hasExited = false;\n  } else {\n    hasExited = !hasPendingExitTransition.current && exitTransitionFinished;\n  }\n\n  // console.log({ hasExited, requestEnter, hasPendingExitTransition, exitTransitionFinished });\n\n  var contextValue = React.useMemo(function () {\n    return {\n      requestedEnter: requestEnter,\n      onExited: handleExited,\n      registerTransition: registerTransition,\n      hasExited: hasExited\n    };\n  }, [handleExited, requestEnter, registerTransition, hasExited]);\n  return {\n    contextValue: contextValue,\n    hasExited: hasExited\n  };\n}","map":{"version":3,"names":["_slicedToArray","React","useTransitionTrigger","requestEnter","_React$useState","useState","_React$useState2","exitTransitionFinished","setExitTransitionFinished","hasPendingExitTransition","useRef","registeredTransitions","_React$useState3","_React$useState4","hasTransition","setHasTransition","previousRequestEnter","useEffect","current","handleExited","useCallback","registerTransition","hasExited","contextValue","useMemo","requestedEnter","onExited"],"sources":["C:/Users/shubh/OneDrive/Desktop/radio with backend/frontend/node_modules/@mui/base/useTransition/useTransitionTrigger.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\n/**\n * Allows child elements to be transitioned in and out.\n *\n * Demos:\n *\n * - [Transitions](https://mui.com/base-ui/react-transitions/#hooks)\n *\n * API:\n *\n * - [useTransitionTrigger API](https://mui.com/base-ui/react-transitions/hooks-api/#use-transition-trigger)\n */\nexport function useTransitionTrigger(requestEnter) {\n  const [exitTransitionFinished, setExitTransitionFinished] = React.useState(true);\n  const hasPendingExitTransition = React.useRef(false);\n  const registeredTransitions = React.useRef(0);\n  const [hasTransition, setHasTransition] = React.useState(false);\n  const previousRequestEnter = React.useRef(requestEnter);\n  React.useEffect(() => {\n    if (!requestEnter &&\n    // checking registeredTransitions.current instead of hasTransition to avoid this effect re-firing whenever hasTransition changes\n    registeredTransitions.current > 0 &&\n    // prevents waiting for a pending transition right after mounting\n    previousRequestEnter.current !== requestEnter) {\n      hasPendingExitTransition.current = true;\n      setExitTransitionFinished(false);\n    }\n    previousRequestEnter.current = requestEnter;\n  }, [requestEnter]);\n  const handleExited = React.useCallback(() => {\n    hasPendingExitTransition.current = false;\n    setExitTransitionFinished(true);\n  }, []);\n  const registerTransition = React.useCallback(() => {\n    registeredTransitions.current += 1;\n    setHasTransition(true);\n    return () => {\n      registeredTransitions.current -= 1;\n      if (registeredTransitions.current === 0) {\n        setHasTransition(false);\n      }\n    };\n  }, []);\n  let hasExited;\n  if (!hasTransition) {\n    // If there are no transitions registered, the `exited` state is opposite of `requestEnter` immediately.\n    hasExited = !requestEnter;\n  } else if (requestEnter) {\n    hasExited = false;\n  } else {\n    hasExited = !hasPendingExitTransition.current && exitTransitionFinished;\n  }\n\n  // console.log({ hasExited, requestEnter, hasPendingExitTransition, exitTransitionFinished });\n\n  const contextValue = React.useMemo(() => ({\n    requestedEnter: requestEnter,\n    onExited: handleExited,\n    registerTransition,\n    hasExited\n  }), [handleExited, requestEnter, registerTransition, hasExited]);\n  return {\n    contextValue,\n    hasExited\n  };\n}"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,cAAA;AAEb,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoBA,CAACC,YAAY,EAAE;EACjD,IAAAC,eAAA,GAA4DH,KAAK,CAACI,QAAQ,CAAC,IAAI,CAAC;IAAAC,gBAAA,GAAAN,cAAA,CAAAI,eAAA;IAAzEG,sBAAsB,GAAAD,gBAAA;IAAEE,yBAAyB,GAAAF,gBAAA;EACxD,IAAMG,wBAAwB,GAAGR,KAAK,CAACS,MAAM,CAAC,KAAK,CAAC;EACpD,IAAMC,qBAAqB,GAAGV,KAAK,CAACS,MAAM,CAAC,CAAC,CAAC;EAC7C,IAAAE,gBAAA,GAA0CX,KAAK,CAACI,QAAQ,CAAC,KAAK,CAAC;IAAAQ,gBAAA,GAAAb,cAAA,CAAAY,gBAAA;IAAxDE,aAAa,GAAAD,gBAAA;IAAEE,gBAAgB,GAAAF,gBAAA;EACtC,IAAMG,oBAAoB,GAAGf,KAAK,CAACS,MAAM,CAACP,YAAY,CAAC;EACvDF,KAAK,CAACgB,SAAS,CAAC,YAAM;IACpB,IAAI,CAACd,YAAY;IACjB;IACAQ,qBAAqB,CAACO,OAAO,GAAG,CAAC;IACjC;IACAF,oBAAoB,CAACE,OAAO,KAAKf,YAAY,EAAE;MAC7CM,wBAAwB,CAACS,OAAO,GAAG,IAAI;MACvCV,yBAAyB,CAAC,KAAK,CAAC;IAClC;IACAQ,oBAAoB,CAACE,OAAO,GAAGf,YAAY;EAC7C,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAClB,IAAMgB,YAAY,GAAGlB,KAAK,CAACmB,WAAW,CAAC,YAAM;IAC3CX,wBAAwB,CAACS,OAAO,GAAG,KAAK;IACxCV,yBAAyB,CAAC,IAAI,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EACN,IAAMa,kBAAkB,GAAGpB,KAAK,CAACmB,WAAW,CAAC,YAAM;IACjDT,qBAAqB,CAACO,OAAO,IAAI,CAAC;IAClCH,gBAAgB,CAAC,IAAI,CAAC;IACtB,OAAO,YAAM;MACXJ,qBAAqB,CAACO,OAAO,IAAI,CAAC;MAClC,IAAIP,qBAAqB,CAACO,OAAO,KAAK,CAAC,EAAE;QACvCH,gBAAgB,CAAC,KAAK,CAAC;MACzB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,IAAIO,SAAS;EACb,IAAI,CAACR,aAAa,EAAE;IAClB;IACAQ,SAAS,GAAG,CAACnB,YAAY;EAC3B,CAAC,MAAM,IAAIA,YAAY,EAAE;IACvBmB,SAAS,GAAG,KAAK;EACnB,CAAC,MAAM;IACLA,SAAS,GAAG,CAACb,wBAAwB,CAACS,OAAO,IAAIX,sBAAsB;EACzE;;EAEA;;EAEA,IAAMgB,YAAY,GAAGtB,KAAK,CAACuB,OAAO,CAAC;IAAA,OAAO;MACxCC,cAAc,EAAEtB,YAAY;MAC5BuB,QAAQ,EAAEP,YAAY;MACtBE,kBAAkB,EAAlBA,kBAAkB;MAClBC,SAAS,EAATA;IACF,CAAC;EAAA,CAAC,EAAE,CAACH,YAAY,EAAEhB,YAAY,EAAEkB,kBAAkB,EAAEC,SAAS,CAAC,CAAC;EAChE,OAAO;IACLC,YAAY,EAAZA,YAAY;IACZD,SAAS,EAATA;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}